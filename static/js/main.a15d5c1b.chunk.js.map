{"version":3,"sources":["reportWebVitals.js","components/ComingSoon.js","components/Portfolio.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ComingSoon","pageURL","encodeURI","document","location","href","Box","className","sx","display","flexDirection","p","alignItems","backgroundColor","Card","maxWidth","m","flexGrow","flexShrink","CardContent","justifyContent","pb","Devices","fontSize","Typography","variant","component","Stack","direction","spacing","key","label","url","connectType","map","data","icon","LinkedIn","GitHub","Email","ListItem","Chip","target","clickable","color","size","CardActions","IconButton","title","onClick","console","log","Share","Button","startIcon","Download","blueGrey","A100","Portfolio","ReactDOM","render","getElementById"],"mappings":"6MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sJCgBDQ,EAAa,WACxB,IAAIC,EAAUC,UAAUC,SAASC,SAASC,MAuB1C,OACE,mCACE,eAACC,EAAA,EAAD,CACEC,UAAU,UACVC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,EAAG,EACHC,WAAY,SACZC,gBAAiB,iBAPrB,UAUE,eAACC,EAAA,EAAD,CACEN,GAAI,CACFO,SAAU,IACVC,EAAG,EACHC,SAAU,EACVC,WAAY,GAEdX,UAAU,OAPZ,UASE,eAACY,EAAA,EAAD,CAAaZ,UAAU,sBAAsBC,GAAI,CAAEG,EAAG,GAAtD,UACE,eAACL,EAAA,EAAD,CACEC,UAAU,qBACVC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfU,eAAgB,SAChBC,GAAI,EACJT,WAAY,UAPhB,UAUG,IACD,cAACU,EAAA,EAAD,CAASC,SAAS,QAAQf,GAAI,CAAEQ,EAAG,KACnC,cAACQ,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,MACVnB,UAAU,6BAHZ,+BAQF,cAACoB,EAAA,EAAD,CACEpB,UAAU,6BACVqB,UAAU,SACVC,QAAS,EAHX,SAhEU,CAClB,CACEC,IAAK,EACLC,MAAO,sBACPC,IAAK,0FACLC,YAAa,YAEf,CACEH,IAAK,EACLC,MAAO,mBACPC,IAAK,4BACLC,YAAa,UAEf,CACEH,IAAK,EACLC,MAAO,WACPC,IAAK,0BACLC,YAAa,UAoDQC,KAAI,SAACC,GAChB,IAAIC,EAUJ,MARyB,aAArBD,EAAKF,YACPG,EAAO,cAACC,EAAA,EAAD,IACuB,WAArBF,EAAKF,YACdG,EAAO,cAACE,EAAA,EAAD,IACuB,UAArBH,EAAKF,cACdG,EAAO,cAACG,EAAA,EAAD,KAIP,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAEEL,KAAMA,EACNL,MAAOI,EAAKJ,MACZL,UAAU,IACVrB,KAAM8B,EAAKH,IACXU,OAAO,SACPC,WAAS,EACTC,MAAM,OACNC,KAAK,UARAV,EAAKL,MAFCK,EAAKL,aAiB5B,eAACgB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEH,MAAM,OACN,aAAW,QACXlB,UAAU,IAEVsB,MAAM,gBACNC,QAAS,WACPC,QAAQC,IAAIlD,IAPhB,SAUE,cAACmD,EAAA,EAAD,MAEF,cAACC,EAAA,EAAD,CAAQT,MAAM,OAAOnB,QAAQ,WAAW6B,UAAW,cAACC,EAAA,EAAD,IAAnD,oCAKJ,cAACzC,EAAA,EAAD,CAAMN,GAAI,CAACK,gBAAiB2C,IAASC,MAAOb,MAAOY,IAAnD,SACE,cAACrC,EAAA,EAAD,UACE,eAACK,EAAA,EAAD,8FAEkB,4CAFlB,yBC5ICkC,EAAY,WACvB,OACE,qBAAKnD,UAAU,OAAf,SACE,cAAC,EAAD,O,MCANoD,IAASC,OAAO,cAAC,EAAD,IAAezD,SAAS0D,eAAe,SAMvDtE,M","file":"static/js/main.a15d5c1b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  Devices,\n  Download,\n  Email,\n  GitHub,\n  LinkedIn,\n  Share,\n} from \"@mui/icons-material\";\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Chip,\n  Stack,\n  ListItem,\n  Typography,\n  IconButton,\n} from \"@mui/material\";\nimport { blueGrey } from \"@mui/material/colors\";\nimport React from \"react\";\n\nexport const ComingSoon = () => {\n  let pageURL = encodeURI(document.location.href);\n  const socialChips = [\n    {\n      key: 1,\n      label: \"Connect on LinkedIn\",\n      url: \"https://www.linkedin.com/in/mpw?trk=public-profile-badge-profile-badge-view-profile-cta\",\n      connectType: \"LinkedIn\",\n    },\n    {\n      key: 2,\n      label: \"Follow on GitHub\",\n      url: \"https://github.com/sm3dev\",\n      connectType: \"GitHub\",\n    },\n    {\n      key: 3,\n      label: \"Email Me\",\n      url: \"mailto:mrwry7@gmail.com\",\n      connectType: \"Email\",\n    },\n  ];\n\n  // use MUI Chips: https://mui.com/components/chips/#basic-chip\n  return (\n    <>\n      <Box\n        className=\"mainBox\"\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          p: 4,\n          alignItems: \"center\",\n          backgroundColor: \"primary.light\",\n        }}\n      >\n        <Card\n          sx={{\n            maxWidth: 345,\n            m: 1,\n            flexGrow: 1,\n            flexShrink: 0,\n          }}\n          className=\"card\"\n        >\n          <CardContent className=\"card-content__block\" sx={{ p: 0 }}>\n            <Box\n              className=\"card-header__block\"\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                pb: 4,\n                alignItems: \"center\",\n              }}\n            >\n              {\" \"}\n              <Devices fontSize=\"large\" sx={{ m: 2 }} />\n              <Typography\n                variant=\"h5\"\n                component=\"div\"\n                className=\"card__title text__all-caps\"\n              >\n                Let's Connect!\n              </Typography>\n            </Box>\n            <Stack\n              className=\"card-content__action-stack\"\n              direction=\"column\"\n              spacing={1}\n            >\n              {socialChips.map((data) => {\n                let icon;\n\n                if (data.connectType === \"LinkedIn\") {\n                  icon = <LinkedIn />;\n                } else if (data.connectType === \"GitHub\") {\n                  icon = <GitHub />;\n                } else if (data.connectType === \"Email\") {\n                  icon = <Email />;\n                }\n\n                return (\n                  <ListItem key={data.key}>\n                    <Chip\n                      key={data.key}\n                      icon={icon}\n                      label={data.label}\n                      component=\"a\"\n                      href={data.url}\n                      target=\"_blank\"\n                      clickable\n                      color=\"info\"\n                      size=\"medium\"\n                    />\n                  </ListItem>\n                );\n              })}\n            </Stack>\n          </CardContent>\n          <CardActions>\n            <IconButton\n              color=\"info\"\n              aria-label=\"share\"\n              component=\"a\"\n              // href={pageURL}\n              title=\"share my card\"\n              onClick={() => {\n                console.log(pageURL);\n              }}\n            >\n              <Share />\n            </IconButton>\n            <Button color=\"info\" variant=\"outlined\" startIcon={<Download />}>\n              Résumé PDF\n            </Button>\n          </CardActions>\n        </Card>\n        <Card sx={{backgroundColor: blueGrey.A100}} color={blueGrey}>\n          <CardContent>\n            <Typography>\n              Have you visited the NSS Cohort 51 Website built by me and my 3\n              UI/UX Front-End <del>teammates</del> wizards?\n            </Typography>\n          </CardContent>\n        </Card>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ComingSoon } from \"./ComingSoon\";\n\nexport const Portfolio = () => {\n  return (\n    <div className=\"page\">\n      <ComingSoon />\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Portfolio } from \"./components/Portfolio\";\nimport \"./styles/Portfolio.css\";\n\nReactDOM.render(<Portfolio />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// ok delete me later\nreportWebVitals();\n"],"sourceRoot":""}